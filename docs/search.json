[
  {
    "objectID": "week1/index.html#what-is-rstudio",
    "href": "week1/index.html#what-is-rstudio",
    "title": "Introduction to R, RStudio and R Programming Basics",
    "section": "What is RStudio?",
    "text": "What is RStudio?\n\nRStudio is an Integrated Development Environment (IDE) for R.\nWhile you can run R in a basic console, RStudio provides powerful tools to make coding easier, faster, and more organized."
  },
  {
    "objectID": "week1/index.html#r-vs-rstudio",
    "href": "week1/index.html#r-vs-rstudio",
    "title": "Introduction to R, RStudio and R Programming Basics",
    "section": "R vs RStudio",
    "text": "R vs RStudio\n“If R were an airplane, RStudio would be the airport, providing many, many supporting services that make it easier for you, the pilot, to take off and go to awesome places. Sure, you can fly an airplane without an airport, but having those runways and supporting infrastructure is a game-changer.”\nJulie Lowndes"
  },
  {
    "objectID": "week1/index.html#r-is-the-language-and-rstudio-is-the-friendly-environment-that-helps-you-work-with-r-more-efficiently.",
    "href": "week1/index.html#r-is-the-language-and-rstudio-is-the-friendly-environment-that-helps-you-work-with-r-more-efficiently.",
    "title": "Introduction to R, RStudio and R Programming Basics",
    "section": "R is the language, and RStudio is the friendly environment that helps you work with R more efficiently.",
    "text": "R is the language, and RStudio is the friendly environment that helps you work with R more efficiently."
  },
  {
    "objectID": "week1/index.html#double-click-rstudio-icon",
    "href": "week1/index.html#double-click-rstudio-icon",
    "title": "Introduction to R, RStudio and R Programming Basics",
    "section": "Double click RStudio icon",
    "text": "Double click RStudio icon"
  },
  {
    "objectID": "week1/index.html#why-you-see-64-bit-or-32-bit-message",
    "href": "week1/index.html#why-you-see-64-bit-or-32-bit-message",
    "title": "Introduction to R, RStudio and R Programming Basics",
    "section": "Why you see “64-bit or 32-bit” message",
    "text": "Why you see “64-bit or 32-bit” message\nOn some systems, especially Windows, you might see a message asking whether to start R in 32-bit or 64-bit mode.\nR comes in two versions:\n\n32-bit R → Older version, works on older computers and systems.\n64-bit R → Modern version, supports larger amounts of memory (RAM), faster for big data, and is the standard today.\n\nWhen you launch RStudio, it tries to detect which version of R to run."
  },
  {
    "objectID": "week1/index.html#which-one-should-you-choose",
    "href": "week1/index.html#which-one-should-you-choose",
    "title": "Introduction to R, RStudio and R Programming Basics",
    "section": "Which one should you choose?",
    "text": "Which one should you choose?\nIf your computer is modern (most are), choose 64-bit R.\nIt can handle large datasets.\nIt’s faster and more stable for most analyses."
  },
  {
    "objectID": "week1/index.html#use-32-bit-r-if",
    "href": "week1/index.html#use-32-bit-r-if",
    "title": "Introduction to R, RStudio and R Programming Basics",
    "section": "Use 32-bit R if:",
    "text": "Use 32-bit R if:\n\nYou are on an old computer (less than 4 GB RAM).\nYou need compatibility with very old packages that only support 32-bit."
  },
  {
    "objectID": "week1/index.html#in-class-demo-discussion-topics",
    "href": "week1/index.html#in-class-demo-discussion-topics",
    "title": "Introduction to R, RStudio and R Programming Basics",
    "section": "In-Class Demo & Discussion Topics",
    "text": "In-Class Demo & Discussion Topics\nExploring the RStudio panes\nCreating a new script file\nCustomizing the appearance of RStudio panes\nUnderstanding the command prompt\nTyping and running basic R code\nCreating a new project\nSaving and managing a project"
  },
  {
    "objectID": "week1/index.html#extra-reading",
    "href": "week1/index.html#extra-reading",
    "title": "Introduction to R, RStudio and R Programming Basics",
    "section": "Extra Reading",
    "text": "Extra Reading\nSections 1.8 - 1.11"
  },
  {
    "objectID": "week1/index.html#r-console",
    "href": "week1/index.html#r-console",
    "title": "Introduction to R, RStudio and R Programming Basics",
    "section": "R Console",
    "text": "R Console\n\n7+1\n\n[1] 8\n\n\n\nrnorm(10) \n\n [1] -0.40011000 -0.14865491  1.29172382 -0.29460983  0.14128674 -0.37765814\n [7] -0.07398599  0.99449865 -0.52021576  0.38117445"
  },
  {
    "objectID": "week1/index.html#variable-assignment",
    "href": "week1/index.html#variable-assignment",
    "title": "Introduction to R, RStudio and R Programming Basics",
    "section": "Variable assignment",
    "text": "Variable assignment\n\na &lt;- rnorm(10)\na\n\n [1]  0.11820408 -0.51178400  0.13481484 -1.33898122 -0.51327533  0.38561573\n [7] -0.05883099 -1.36228333  1.65151130  0.97801817\n\n\n\nb &lt;- a*100\nb\n\n [1]   11.820408  -51.178400   13.481484 -133.898122  -51.327533   38.561573\n [7]   -5.883099 -136.228333  165.151130   97.801817"
  },
  {
    "objectID": "week1/index.html#data-permanency",
    "href": "week1/index.html#data-permanency",
    "title": "Introduction to R, RStudio and R Programming Basics",
    "section": "Data permanency",
    "text": "Data permanency\n\nls() can be used to display the names of the objects which are currently stored within R.\nThe collection of objects currently stored is called the workspace\n\n\nls()\n\n[1] \"a\" \"b\""
  },
  {
    "objectID": "week1/index.html#section",
    "href": "week1/index.html#section",
    "title": "Introduction to R, RStudio and R Programming Basics",
    "section": "",
    "text": "To remove objects the function rm is available\n\nremove all objects rm(list=ls())\nremove specific objects rm(x, y, z)\n\n\n\nrm(a)\nls()\n\n\nrm(list=ls())\nls()"
  },
  {
    "objectID": "week1/index.html#comment-your-code",
    "href": "week1/index.html#comment-your-code",
    "title": "Introduction to R, RStudio and R Programming Basics",
    "section": "Comment your code",
    "text": "Comment your code\n\nEach line of a comment should begin with the comment symbol and a single space: # .\n\n\nrnorm(10) # This is a comment \n\n [1] -0.4720801  0.9596439 -1.9945823 -1.0139362  0.9799542 -0.1528574\n [7]  0.9118105 -0.4241112 -0.1896635 -1.3915665\n\nsum(1:10) # 1+2\n\n[1] 55"
  },
  {
    "objectID": "week1/index.html#objects-in-r",
    "href": "week1/index.html#objects-in-r",
    "title": "Introduction to R, RStudio and R Programming Basics",
    "section": "Objects in R",
    "text": "Objects in R\n\nR is an object-oriented language.\nAn object in R is anything (data structures, functions, etc., that can be assigned to a variable).\n\nData structures are the ways of arranging data.\nFunctions tell R to do something."
  },
  {
    "objectID": "week1/index.html#getting-help-with-functions-and-features",
    "href": "week1/index.html#getting-help-with-functions-and-features",
    "title": "Introduction to R, RStudio and R Programming Basics",
    "section": "Getting help with functions and features",
    "text": "Getting help with functions and features\nMethod 1\nhelp(rnorm)\n\nFor a feature specified by special characters such as for, if, [[\n\nhelp(\"[[\")\n\nSearch the help files for a word or phrase.\n\nhelp.search(‘weighted mean’) \nMethod 2\n?rnorm\n??rnorm"
  },
  {
    "objectID": "week1/index.html#vectors",
    "href": "week1/index.html#vectors",
    "title": "Introduction to R, RStudio and R Programming Basics",
    "section": "Vectors",
    "text": "Vectors\n\nVectors are one-dimensional arrays that can hold numeric data, character data, or logical data.\nCombine function c() is used to form the vector.\nData in a vector must only be one type or mode (numeric, character, or logical). You can’t mix modes in the same vector."
  },
  {
    "objectID": "week1/index.html#vector-assignment",
    "href": "week1/index.html#vector-assignment",
    "title": "Introduction to R, RStudio and R Programming Basics",
    "section": "Vector assignment",
    "text": "Vector assignment\nSyntax\nvector_name &lt;- c(element1, element2, element3)\nx &lt;- c(5, 6, 3, 1 , 100)\n\nassignment operator (‘&lt;-’), ‘=’ can be used as an alternative.\nc() function\n\nWhat will be the output of the following code?\ny &lt;- c(x, 500, 600)"
  },
  {
    "objectID": "week1/index.html#types-and-tests-with-vectors",
    "href": "week1/index.html#types-and-tests-with-vectors",
    "title": "Introduction to R, RStudio and R Programming Basics",
    "section": "Types and tests with vectors",
    "text": "Types and tests with vectors\n\nfirst_vec &lt;- c(10, 20, 50, 70)\nsecond_vec &lt;- c(\"Jan\", \"Feb\", \"March\", \"April\")\nthird_vec &lt;- c(TRUE, FALSE, TRUE, TRUE)\nfourth_vec &lt;- c(10L, 20L, 50L, 70L)\n\nTo check if it is a\n\nvector: is.vector()\n\n\nis.vector(first_vec)\n\n[1] TRUE\n\n\n\ncharacter vector: is.character()\n\n\nis.character(first_vec)\n\n[1] FALSE"
  },
  {
    "objectID": "week1/index.html#section-1",
    "href": "week1/index.html#section-1",
    "title": "Introduction to R, RStudio and R Programming Basics",
    "section": "",
    "text": "double: is.double()\n\n\nis.double(first_vec)\n\n[1] TRUE\n\n\n\ninteger: is.integer()\n\n\nis.integer(first_vec)\n\n[1] FALSE\n\n\n\nlogical: is.logical()\n\n\nis.logical(first_vec)\n\n[1] FALSE\n\n\n\nlength\n\n\nlength(first_vec)\n\n[1] 4"
  },
  {
    "objectID": "week1/index.html#coercion",
    "href": "week1/index.html#coercion",
    "title": "Introduction to R, RStudio and R Programming Basics",
    "section": "Coercion",
    "text": "Coercion\nVectors must be homogeneous. When you attempt to combine different types they will be coerced to the most flexible type so that every element in the vector is of the same type.\nOrder from least to most flexible\nlogical –&gt; integer –&gt; double –&gt; character\n\na &lt;- c(3.1, 2L, 3, 4, \"GPA\") \ntypeof(a) \n\n[1] \"character\"\n\n\n\nanew &lt;- c(3.1, 2L, 3, 4)\ntypeof(anew) \n\n[1] \"double\""
  },
  {
    "objectID": "week1/index.html#explicit-coercion",
    "href": "week1/index.html#explicit-coercion",
    "title": "Introduction to R, RStudio and R Programming Basics",
    "section": "Explicit coercion",
    "text": "Explicit coercion\nVectors can be explicitly coerced from one class to another using the as.* functions, if available. For example, as.character, as.numeric, as.integer, and as.logical.\n\nvec1 &lt;- c(TRUE, FALSE, TRUE, TRUE)\ntypeof(vec1)\n\n[1] \"logical\"\n\nvec2 &lt;- as.integer(vec1)\ntypeof(vec2)\n\n[1] \"integer\"\n\nvec2\n\n[1] 1 0 1 1\n\n\nWhy does the below output NAs?\n\nx &lt;- c(\"a\", \"b\", \"c\")\nas.numeric(x)\n\n[1] NA NA NA"
  },
  {
    "objectID": "week1/index.html#section-2",
    "href": "week1/index.html#section-2",
    "title": "Introduction to R, RStudio and R Programming Basics",
    "section": "",
    "text": "x1 &lt;- 1:3\nx2 &lt;- c(10, 20, 30)\ncombinedx1x2 &lt;- c(x1, x2)\ncombinedx1x2 \n\n[1]  1  2  3 10 20 30\n\n\n\nclass(x1)\n\n[1] \"integer\"\n\nclass(x2)\n\n[1] \"numeric\"\n\nclass(combinedx1x2)\n\n[1] \"numeric\"\n\n\n\nIf you combine a numeric vector and a character vector\n\n\ny1 &lt;- c(1, 2, 3)\ny2 &lt;- c(\"a\", \"b\", \"c\")\nc(y1, y2)\n\n[1] \"1\" \"2\" \"3\" \"a\" \"b\" \"c\""
  },
  {
    "objectID": "week1/index.html#name-elements-in-a-vector",
    "href": "week1/index.html#name-elements-in-a-vector",
    "title": "Introduction to R, RStudio and R Programming Basics",
    "section": "Name elements in a vector",
    "text": "Name elements in a vector\nYou can name elements in a vector in different ways. We will learn two of them.\n\nWhen creating it\n\n\nx1 &lt;- c(a=1991, b=1992, c=1993)\nx1\n\n   a    b    c \n1991 1992 1993 \n\n\n\nModifying the names of an existing vector\n\n\nx2 &lt;- c(1, 5, 10)\nnames(x2) &lt;- c(\"a\", \"b\", \"b\")\nx2\n\n a  b  b \n 1  5 10 \n\n\nNote that the names do not have to be unique."
  },
  {
    "objectID": "week1/index.html#to-remove-names-of-a-vector",
    "href": "week1/index.html#to-remove-names-of-a-vector",
    "title": "Introduction to R, RStudio and R Programming Basics",
    "section": "To remove names of a vector",
    "text": "To remove names of a vector\nMethod 1\n\nunname(x1); x1\n\n[1] 1991 1992 1993\n\n\n   a    b    c \n1991 1992 1993 \n\n\nMethod 2\n\nnames(x2) &lt;- NULL; x2\n\n[1]  1  5 10\n\n\n.redWhat will be the output of the following code?\nv &lt;- c(1, 2, 3)\nnames(v) &lt;- c(\"a\")\nv"
  },
  {
    "objectID": "week1/index.html#simplifying-vector-creation",
    "href": "week1/index.html#simplifying-vector-creation",
    "title": "Introduction to R, RStudio and R Programming Basics",
    "section": "Simplifying vector creation",
    "text": "Simplifying vector creation\n\ncolon : produce regular spaced ascending or descending sequences.\n\n\n 10:16\n\n[1] 10 11 12 13 14 15 16\n\n-0.5:8.5\n\n [1] -0.5  0.5  1.5  2.5  3.5  4.5  5.5  6.5  7.5  8.5"
  },
  {
    "objectID": "week1/index.html#section-3",
    "href": "week1/index.html#section-3",
    "title": "Introduction to R, RStudio and R Programming Basics",
    "section": "",
    "text": "sequence: seq(initial_value, final_value, increment)\n\n\nseq(1,11)\n\n [1]  1  2  3  4  5  6  7  8  9 10 11\n\nseq(1, 11, length.out=5)\n\n[1]  1.0  3.5  6.0  8.5 11.0\n\nseq(0, 11, by=2)\n\n[1]  0  2  4  6  8 10"
  },
  {
    "objectID": "week1/index.html#section-4",
    "href": "week1/index.html#section-4",
    "title": "Introduction to R, RStudio and R Programming Basics",
    "section": "",
    "text": "repeats rep()\n\n\nrep(9, 5)\n\n[1] 9 9 9 9 9\n\nrep(1:4, 2)\n\n[1] 1 2 3 4 1 2 3 4\n\nrep(1:4, each=2) # each element is repeated twice\n\n[1] 1 1 2 2 3 3 4 4\n\nrep(1:4, times=2) # whole sequence is repeated twice\n\n[1] 1 2 3 4 1 2 3 4\n\nrep(1:4, each=2, times=3)\n\n [1] 1 1 2 2 3 3 4 4 1 1 2 2 3 3 4 4 1 1 2 2 3 3 4 4\n\nrep(1:4, 1:4)\n\n [1] 1 2 2 3 3 3 4 4 4 4\n\nrep(1:4, c(4, 1, 4, 2))\n\n [1] 1 1 1 1 2 3 3 3 3 4 4"
  },
  {
    "objectID": "week1/index.html#logical-operators",
    "href": "week1/index.html#logical-operators",
    "title": "Introduction to R, RStudio and R Programming Basics",
    "section": "Logical operators",
    "text": "Logical operators\n\nc(1, 2, 3) == c(10, 20, 3)\n\n[1] FALSE FALSE  TRUE\n\n\n\nc(1, 2, 3) != c(10, 20, 3)\n\n[1]  TRUE  TRUE FALSE\n\n\n\n1:5 &gt; 3\n\n[1] FALSE FALSE FALSE  TRUE  TRUE\n\n\n\n1:5 &lt; 3\n\n[1]  TRUE  TRUE FALSE FALSE FALSE\n\n\n\n&lt;= less than or equal to\n&gt;= greater than or equal to\n| or\n& and"
  },
  {
    "objectID": "week1/index.html#operators-in---in-the-set",
    "href": "week1/index.html#operators-in---in-the-set",
    "title": "Introduction to R, RStudio and R Programming Basics",
    "section": "Operators: %in% - in the set",
    "text": "Operators: %in% - in the set\n\na &lt;- c(1, 2, 3)\nb &lt;- c(1, 10, 3)\na%in%b\n\n[1]  TRUE FALSE  TRUE\n\n\n\nx &lt;- 1:10\ny &lt;- 1:3\nx\n\n [1]  1  2  3  4  5  6  7  8  9 10\n\ny\n\n[1] 1 2 3\n\nx %in% y\n\n [1]  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n\n\ny %in% x\n\n[1] TRUE TRUE TRUE"
  },
  {
    "objectID": "week1/index.html#vector-arithmetic",
    "href": "week1/index.html#vector-arithmetic",
    "title": "Introduction to R, RStudio and R Programming Basics",
    "section": "Vector arithmetic",
    "text": "Vector arithmetic\n\noperations are performed element by element.\n\n\nc(10, 100, 100) + 2 # two is added to every element in the vector\n\n[1]  12 102 102\n\n\n\noperations between two vectors\n\n\nv1 &lt;- c(1, 2, 3); v2 &lt;- c(10, 100, 1000)\nv1 + v2\n\n[1]   11  102 1003\n\n\nAdd two vectors of unequal length\n\nlongvec &lt;- seq(10, 100, length=10); shortvec &lt;- c(1, 2, 3, 4, 5)\n\nshortvec + longvec\n\n [1]  11  22  33  44  55  61  72  83  94 105"
  },
  {
    "objectID": "week1/index.html#what-will-be-the-output-of-the-following-code",
    "href": "week1/index.html#what-will-be-the-output-of-the-following-code",
    "title": "Introduction to R, RStudio and R Programming Basics",
    "section": "What will be the output of the following code?",
    "text": "What will be the output of the following code?\nfirst &lt;- c(1, 2, 3, 4); second &lt;- c(10, 100)\nfirst * second"
  },
  {
    "objectID": "week1/index.html#missing-values",
    "href": "week1/index.html#missing-values",
    "title": "Introduction to R, RStudio and R Programming Basics",
    "section": "Missing values",
    "text": "Missing values\nUse NA or NaN to place a missing value in a vector.\n\nz &lt;- c(10, 101, 2, 3, NA)\nis.na(z)\n\n[1] FALSE FALSE FALSE FALSE  TRUE"
  },
  {
    "objectID": "week1/index.html#packages",
    "href": "week1/index.html#packages",
    "title": "Introduction to R, RStudio and R Programming Basics",
    "section": "Packages",
    "text": "Packages\ntidyverse"
  },
  {
    "objectID": "prerequisite.html",
    "href": "prerequisite.html",
    "title": "Pre-requisite for TT-Lecture 01",
    "section": "",
    "text": "Before the R Programming lecture, please install the following software:\n\nR\nRStudio\n\nIf you are a Windows user, you will also need to install an additional software package: Rtools.\nClick here to view R and RStudio installation guide\nNote:\n\nPlease ensure that you install R before installing RStudio.\nAfter installing both R and RStudio, double-click the RStudio icon to open it. In the console, type the following command:\n\nR.version.string\nPress Enter, and note down the displayed R version in your notebook.\n\nTo install Rtools\n\nDownload Rtools from here https://cran.r-project.org/bin/windows/Rtools/\nDownload the correct Rtools installer for your R version from the official Comprehensive R Archive Network (CRAN) page.\n\nFor example:\n\nIf your R version is 4.5.x, download Rtools45quarto render\n\n\n\nIf your R version is 4.4.x, download Rtools44\nIf your R version is 4.3.x, download Rtools43\nIf your R version is 4.2.x, download Rtools42\nIf your R version is 4.0–4.1.x, download Rtools40\n\n\nRun the downloaded .exe file and follow the installer prompts, typically accepting the default options and installation directory."
  },
  {
    "objectID": "ia.html",
    "href": "ia.html",
    "title": "LT2010 - Data Science for Transport and Logistics Systems - Intake 23 (University of Moratuwa)",
    "section": "",
    "text": "Release date: 22 Sep 2025\nDeadline: 29 Sep 2025\n\n\nThis assignment aims to help you apply data analysis techniques to a real-world dataset in the field of Transport and Logistics Management Engineering. You will analyze the dataset, generate meaningful insights, and prepare a structured report using RMarkdown or Quarto with an HTML output.\n\n\n\n\n\nChoose a dataset related to transport or logistics management (e.g., shipping data, traffic flow, airline performance, freight transport, public transit, etc.).\nThe dataset must come from a reliable source (such as government agencies, research repositories, or open data portals).\nInclude the dataset file in your submission folder.\n\n\n\n\nYour report should include the following sections:\n1. Introduction (≤ 300 words)\nBriefly describe the context of the dataset, its importance in transport/logistics management, and the purpose of your analysis.\n2. Data Description\nProvide details about the dataset: number of observations, variables, types of variables, and any preprocessing or cleaning steps performed.\n3. Exploratory Data Analysis (EDA)\nUse descriptive statistics, visualizations (e.g., histograms, bar plots, boxplots, scatter plots), and summary tables to explore the dataset.\n4. Key Insights\nPresent five insights you discovered from the analysis. Each insight should be clearly explained and supported with evidence (e.g., plots, statistics).\n5. Data Source\nProvide a proper citation or link to the dataset source.\n\n\nUse RMarkdown (.Rmd) or Quarto (.qmd) to prepare your analysis.\nThe output should be in HTML format.\nSubmit a folder that contains:\nThe dataset file\nYour .Rmd or .qmd file\nThe generated .html output\n\n\n\n\nUpload the entire folder (zipped) with your files.\nEnsure that your HTML report is well-structured, readable, and free from major errors."
  },
  {
    "objectID": "ia.html#individual-assignment",
    "href": "ia.html#individual-assignment",
    "title": "LT2010 - Data Science for Transport and Logistics Systems - Intake 23 (University of Moratuwa)",
    "section": "",
    "text": "Release date: 22 Sep 2025\nDeadline: 29 Sep 2025\n\n\nThis assignment aims to help you apply data analysis techniques to a real-world dataset in the field of Transport and Logistics Management Engineering. You will analyze the dataset, generate meaningful insights, and prepare a structured report using RMarkdown or Quarto with an HTML output.\n\n\n\n\n\nChoose a dataset related to transport or logistics management (e.g., shipping data, traffic flow, airline performance, freight transport, public transit, etc.).\nThe dataset must come from a reliable source (such as government agencies, research repositories, or open data portals).\nInclude the dataset file in your submission folder.\n\n\n\n\nYour report should include the following sections:\n1. Introduction (≤ 300 words)\nBriefly describe the context of the dataset, its importance in transport/logistics management, and the purpose of your analysis.\n2. Data Description\nProvide details about the dataset: number of observations, variables, types of variables, and any preprocessing or cleaning steps performed.\n3. Exploratory Data Analysis (EDA)\nUse descriptive statistics, visualizations (e.g., histograms, bar plots, boxplots, scatter plots), and summary tables to explore the dataset.\n4. Key Insights\nPresent five insights you discovered from the analysis. Each insight should be clearly explained and supported with evidence (e.g., plots, statistics).\n5. Data Source\nProvide a proper citation or link to the dataset source.\n\n\nUse RMarkdown (.Rmd) or Quarto (.qmd) to prepare your analysis.\nThe output should be in HTML format.\nSubmit a folder that contains:\nThe dataset file\nYour .Rmd or .qmd file\nThe generated .html output\n\n\n\n\nUpload the entire folder (zipped) with your files.\nEnsure that your HTML report is well-structured, readable, and free from major errors."
  },
  {
    "objectID": "home.html",
    "href": "home.html",
    "title": "Teaching and Learning Materials",
    "section": "",
    "text": "Lecturer in charge for LT2010: Data Science for Transport and Logistics Systems (R programming section): Dr Thiyanga S. Talagala\nThese notes contain only the R Programming and Data Analysis portion of LT2010: Data Science for Transport and Logistics Systems.\nI’ll be conducting four lectures in total, spread across 12 hours. They’ll be named TT-Lecture 01, TT-Lecture 02, TT-Lecture 03, and TT-Lecture 04."
  },
  {
    "objectID": "home.html#link-to-the-moodel",
    "href": "home.html#link-to-the-moodel",
    "title": "Teaching and Learning Materials",
    "section": "Link to the moodel",
    "text": "Link to the moodel\nClick here"
  },
  {
    "objectID": "home.html#pre-requisite-for-tt-lecture-01",
    "href": "home.html#pre-requisite-for-tt-lecture-01",
    "title": "Teaching and Learning Materials",
    "section": "Pre-requisite for TT-Lecture 01",
    "text": "Pre-requisite for TT-Lecture 01\nClick here to view the task you need to complete before TT-Lecture 01"
  },
  {
    "objectID": "home.html#tt-lecture-1",
    "href": "home.html#tt-lecture-1",
    "title": "Teaching and Learning Materials",
    "section": "TT-Lecture 1",
    "text": "TT-Lecture 1\nDate: September 8, 2025\nTime: 1.15pm - 4.15pm\nZoom link: available on Moodle\nSlides-TT1:\n\nIntroduction to R and RStudio\nR programming basics\n\nClick here\nReading and Exercises:\nChapter 1\nInstalling packages - in class demo\nDocumenting with RMarkdown - in class demo"
  },
  {
    "objectID": "home.html#tt-lecture-2",
    "href": "home.html#tt-lecture-2",
    "title": "Teaching and Learning Materials",
    "section": "TT-Lecture 2",
    "text": "TT-Lecture 2\nDate: September 15, 2025\nTime: 1.15pm - 4.15pm\n\nData import and data export (reading data from .csv): In-class demo\nCreating dataframes: Section 2.4\n\nChapter 2 - 2.4\n\nIntroduction to tidyverse - 7.1:7.4 and 7.5\nData wrangling-tidyr: 8.1 and 8.2"
  },
  {
    "objectID": "home.html#tt-lecture-3",
    "href": "home.html#tt-lecture-3",
    "title": "Teaching and Learning Materials",
    "section": "TT-Lecture 3",
    "text": "TT-Lecture 3\n\nData wrangling-dplyr\nData visualisation"
  },
  {
    "objectID": "home.html#tt-lecture-4",
    "href": "home.html#tt-lecture-4",
    "title": "Teaching and Learning Materials",
    "section": "TT-Lecture 4",
    "text": "TT-Lecture 4"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "About",
    "section": "",
    "text": "Department: Department of Transport Management and Logistics Engineering (TMLE), Faculty of Engineering.\nDegree Program: BSc Engineering (Hons ) in Transport Management and Logistics Engineering.\nModule Code and Title: LT 2010 - Data Science for Transport & Logistics Systems.\nSemester: 03 (out of 8 semesters).\nCredits: 4 credits.\nNo of Students: 87"
  },
  {
    "objectID": "index.html#about-the-degree-programme-and-the-unit",
    "href": "index.html#about-the-degree-programme-and-the-unit",
    "title": "About",
    "section": "",
    "text": "Department: Department of Transport Management and Logistics Engineering (TMLE), Faculty of Engineering.\nDegree Program: BSc Engineering (Hons ) in Transport Management and Logistics Engineering.\nModule Code and Title: LT 2010 - Data Science for Transport & Logistics Systems.\nSemester: 03 (out of 8 semesters).\nCredits: 4 credits.\nNo of Students: 87"
  },
  {
    "objectID": "index.html#lesson-plan",
    "href": "index.html#lesson-plan",
    "title": "About",
    "section": "Lesson plan",
    "text": "Lesson plan\n\nStart on: 8th September 2025.\nEnd on: 29th September 2025.\nNo. of Lectures: 4 (can be adjusted if more is needed)\nLecture time: Monday afternoon (1.15 pm – 4.15 pm).\nType: Online via Zoom\nContinuous Assignments: One (1) individual assignment on R programming (this accounts for 10% of the total module marks).\nQuestions for the exam paper: Two (2) questions (Total 40 marks – 20 marks each)"
  },
  {
    "objectID": "week0/index.html",
    "href": "week0/index.html",
    "title": "Pre-requisite for TT-Lecture 01",
    "section": "",
    "text": "Before the R Programming lecture, please install the following software:\n\nR\nRStudio\n\nIf you are a Windows user, you will also need to install an additional software package: Rtools.\nClick here to view R and RStudio installation guide\nNote:\n\nPlease ensure that you install R before installing RStudio.\nAfter installing both R and RStudio, double-click the RStudio icon to open it. In the console, type the following command:\n\nR.version.string\nPress Enter, and note down the displayed R version in your notebook.\n\nTo install Rtools\n\nDownload Rtools from here https://cran.r-project.org/bin/windows/Rtools/\nDownload the correct Rtools installer for your R version from the official Comprehensive R Archive Network (CRAN) page.\n\nFor example:\n\nIf your R version is 4.4.x, download Rtools44\nIf your R version is 4.3.x, download Rtools43\nIf your R version is 4.2.x, download Rtools42\nIf your R version is 4.0–4.1.x, download Rtools40\n\n\nRun the downloaded .exe file and follow the installer prompts, typically accepting the default options and installation directory."
  }
]